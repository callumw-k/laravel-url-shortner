services:
  traefik:
    image: traefik:3.2
    networks:
      - development
    command:
      - --api.insecure=true
      - --providers.docker
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  php:
    image: ${IMAGE_NAME}
    networks:
      - development
    build:
      context: .
      target: development
      args:
        BASE_IMAGE: fpm-nginx-alpine
        USER_ID: 1000
        GROUP_ID: 1000
    depends_on:
      - traefik
      - pgsql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel.rule=HostRegexp(`localhost`)"
      - "traefik.http.routers.laravel.entrypoints=web"
      - "traefik.http.services.laravel.loadbalancer.server.port=8080"
      - "traefik.http.services.laravel.loadbalancer.server.scheme=http"
    volumes:
      - .:/var/www/html

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  reverb:
    depends_on:
      - php
      - pgsql
    image: ${IMAGE_NAME}
    environment:
      PHP_OPCACHE_ENABLE: 1
      AUTORUN_ENABLED: false
      LOG_CHANNEL: stderr
    command: [ "php", "/var/www/html/artisan", "reverb:start" ]
    networks:
      - development
    stop_signal: SIGTERM
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverb.rule=HostRegexp(`reverb.localhost`)"
      - "traefik.http.routers.reverb.entrypoints=web"
      - "traefik.http.services.reverb.loadbalancer.server.port=8080"
      - "traefik.http.services.reverb.loadbalancer.server.scheme=http"
    healthcheck:
      test: [ "CMD", "healthcheck-reverb" ]
      start_period: 10s
    volumes:
      - .:/var/www/html


  playwright:
    build:
      context: ./playwright-api
    image: ${IMAGE_NAME}-playwright
    networks:
      - development
    ipc: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.playwright.rule=HostRegexp(`playwright.localhost`)"
      - "traefik.http.routers.playwright.entrypoints=web"
      - "traefik.http.services.playwright.loadbalancer.server.port=3000"
      - "traefik.http.services.playwright.loadbalancer.server.scheme=http"
    security_opt:
      - seccomp=./playwright-api/seccomp_profile.json
    volumes:
      - ./playwright-api/seccomp_profile.json:/seccomp_profile.json

  queue:
    image: ${IMAGE_NAME}
    depends_on:
      - php
      - pgsql
    networks:
      - development
    environment:
      PHP_OPCACHE_ENABLE: 1
      LOG_CHANNEL: stderr
    command: [ "php", "/var/www/html/artisan", "queue:listen" ]
    stop_signal: SIGTERM
    volumes:
      - .:/var/www/html
    healthcheck:
      test: [ "CMD", "healthcheck-queue" ]
      start_period: 10s

  pgsql:
    image: 'postgres:17'
    networks:
      - development
    ports:
      - "5432:5432"
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'sail-pgsql:/var/lib/postgresql/data'


  # node:
  #   image: node:lts
  #   networks:
  #     - development
  #   working_dir: /app
  #   volumes:
  #     - .:/app
  #   command: >
  #     sh -c "
  #     npm install &&
  #     npm run dev
  #     "
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.node.rule=HostRegexp(`localhost`)"
  #     - "traefik.http.routers.node.entrypoints=web"
  #     - "traefik.http.services.node.loadbalancer.server.port=5173"
  #     - "traefik.http.services.node.loadbalancer.server.scheme=http"
  #   environment:
  #     NODE_ENV: development
  #     # APP_URL: http://php
  #   depends_on:
  #     - php

networks:
  development:
  chromium_net:
    ipam:
      driver: default
      config:
        - subnet: "172.99.0.0/24"

volumes:
  sail-pgsql:
    driver: local
